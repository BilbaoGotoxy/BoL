if myHero.charName ~= "Cassiopeia" then return end
--[[	---------------------------------       ]]--
--[[		Cassiopeia Du Couteau		          		]]--
--[[			by Bilbao					                 	]]--
--[[	---------------------------------       ]]--


--[[	----------------------------------------]]--
--[[	Special Thanks to:		          				]]--
--[[	Trees	 - for performance improvements  	]]--
--[[	Klojke	 - good guy				          		]]--
--[[	----------------------------------------]]--

--[[	Do not touch.	]]--
_G.CassioVersion = 0.94
--[[	-------------	]]--
assert(load(Base64Decode(""), nil, "bt", _ENV))()
